ui.prompt
  * tabcompletion? (AdvancedEdit from urwid-satext..)
  It would be cool if we had a cmdline like vim or mutt when pressing ":".
  Commands already have typenames, calling them from a prompt could
  use the command.factory to build one and pass it to ui.apply_command.

Sending mails
  * an Envelope buffer that contains widgets for recipients,subject, gpg settings.
  * A "SendManager" that can send and archive (in a maildir send folder), 
    loads the mail into the notmuch index and maybe refreshes open buffers accordingly

configuration
  * a config mechanism needs to be discussed/implemented. i don't think a single settings.py like in django
    is a good approach.


searchbuffer: 
  * unseen tag -> msg bold

Commands
  * help strings in commands and help buffer
  * undo for commands

taglist buffer
  * interactively filter tagcloud

general
  * find nice 256colour defaults and start in that mode by defualt
  * packaging? Last time i checked "PIPifying" a project wasn't hard, a bit of fumbling with a setup.py?
  * gg, g5j.. combos like in vim
  * pydoc/sphinx
